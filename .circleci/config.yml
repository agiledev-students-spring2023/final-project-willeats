# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define the jobs we want to run for this project
jobs:
  build-back-end:
    docker:
      - image: cimg/node:16.13.0 # latest stable node at the time of writing
        # auth:
        #   username: mydockerhub-user
        #   password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - checkout
      - run: echo "this is the build back-end job"
      - run: pwd # for debugging: show current working directory
      - run: ls # for debugging: show sub-directories in here
      - run: cd back-end && npm install # install all dependencies listed in package.json
  test-back-end:
    docker:
      - image: cimg/node:16.13.0 # latest stable node at the time of writing
        # auth:
        #   username: mydockerhub-user
        #   password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - checkout
      - run: echo "this is the test back-end job"
      - run: pwd # for debugging: show current working directory
      - run: ls # for debugging: show sub-directories in here
      - run: cd back-end && npm install # install all dependencies listed in package.json
      - run: cd back-end && npm test # run all unit tests
  build-front-end:
    docker:
      - image: cimg/node:16.13.0 # latest stable node at the time of writing
        # auth:
        #   username: mydockerhub-user
        #   password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - checkout
      - run: echo "this is the build front-end job"
      - run: cd front-end && npm install # install all dependencies listed in package.json
      - run: cd front-end && npm install && npm run build # install all dependencies listed in package.json

# Orchestrate our job run sequence
workflows:
  build-and-test-express:
    jobs:
      - build-back-end
      - test-back-end
  build-react:
    jobs:
      - build-front-end
